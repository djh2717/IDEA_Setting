<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="402" />
    <option name="newTranslationDialogY" value="356" />
    <histories>
      <item value="evaluation" />
      <item value="gradient" />
      <item value="计算gradient" />
      <item value="Cross Entropy Loss" />
      <item value="dropout" />
      <item value="xavier uniform_" />
      <item value="Given kwargs, returns a canonicalized dict of factory kwargs that can be directly passed to factory functions like torch.empty, or errors if unrecognized kwargs are present." />
      <item value="kwargs" />
      <item value="counterpart" />
      <item value="recursion" />
      <item value="递归" />
      <item value="relevant" />
      <item value="where Java's default behavior renders them non-serializable without good reason." />
      <item value="Sets the interval of allowed inactivity after which a part file will have to roll" />
      <item value="for Bulk Format" />
      <item value="Properties" />
      <item value="with Rolling Policy" />
      <item value="with Bucket Assigner" />
      <item value="set Parallelism" />
      <item value="差值" />
      <item value="invariant" />
      <item value="hex" />
      <item value="heapq" />
      <item value="heapify" />
      <item value="queue" />
      <item value="Debezium Source Function" />
      <item value="Debezium" />
      <item value="GZIP Output Stream" />
      <item value="get Row Format File Sink" />
      <item value="properties" />
      <item value="上报" />
      <item value="eval" />
      <item value="LLAP" />
      <item value="physical Writer" />
      <item value="mean" />
      <item value="An array object represents a multidimensional, homogeneous array of fixed-size items. An associated data-type object describes the format of each element in the array (its byte-order, how many bytes it occupies in memory, whether it is an integer, a floating point number, or something else, etc.) Arrays should be constructed using array, zeros or empty (refer to the See Also section below). The parameters given here refer to a low-level method (ndarray(...)) for instantiating an array." />
      <item value="axis" />
      <item value="modify" />
      <item value="60000" />
      <item value="This is useful for hadoop to minimize the size of compression blocks for their file formats (e.g. SequenceFile) but is undesirable for Parquet since we already have the data page which provides that." />
      <item value="We do not use the default hadoop one since that codec adds a blocking structure around the base snappy compression algorithm" />
      <item value="Task Mailbox" />
      <item value="path" />
      <item value="neither via constructorsetters, nor via the Configuration." />
      <item value="custome" />
      <item value="Experimental" />
      <item value="alternate" />
      <item value="art files can be in one of three states: in-progress, pending or finished. The reason for this is how the sink works together with the checkpointing mechanism to provide exactly-once semantics and fault-tolerance. The part file that is currently being written to is in-progress. Once a part file is closed for writing it becomes pending. When a checkpoint is successful the currently pending files will be moved to finished." />
      <item value="If case of a failure, and in order to guarantee exactly-once semantics, the sink should roll back to the state it had when that last successful checkpoint occurred. To this end, when restoring, the restored files in pending state are transferred into the finished state while any in-progress files are rolled back, so that they do not contain data that arrived after the checkpoint from which we restore." />
      <item value="In some scenarios, the open buckets are required to change based on time. In these cases, the user can specify a bucketCheckInterval (by default 1m) and the sink will check periodically and roll the part file if the specified rolling policy says so." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="79" />
        <entry key="ENGLISH" value="79" />
        <entry key="BULGARIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1642388362632" />
  </component>
</application>